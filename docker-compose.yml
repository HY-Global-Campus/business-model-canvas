version: "3.9"

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    healthcheck:
      # Wait until PG is actually accepting connections on the DB you configured
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1"]
      interval: 3s
      timeout: 3s
      retries: 20
      start_period: 5s

  app:
    build:
      context: ./backend
      args:
        NODE_ENV: development
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://user:password@db:5432/mydatabase
      JWT_SECRET: developmentsecret
      GCAI_URL: ${GCAI_URL}
      GCAI_TOKEN: ${GCAI_TOKEN}
      CHOKIDAR_USEPOLLING: "true"
      CHOKIDAR_INTERVAL: "150"
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /usr/src/app
          ignore:
            - node_modules/
            - .git/
            - dist/
        - action: rebuild
          path: ./backend/package.json
        - action: rebuild
          path: ./backend/package-lock.json

  frontend:
    build: 
      context: ./frontend
      args:
        VITE_API_URL: http://localhost:8080
    environment:
      NODE_ENV: development
      # Browser calls your machine via published port, so localhost is correct here.
      CHOKIDAR_USEPOLLING: "true"
      CHOKIDAR_INTERVAL: "150"
    ports:
      - "3000:3000"
    depends_on:
      - app
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /usr/src/app
          ignore:
            - node_modules/
            - .git/
            - dist/
        - action: rebuild
          path: ./frontend/package.json
        - action: rebuild
          path: ./frontend/package-lock.json
